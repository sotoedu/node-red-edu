1. inject - debug

2. inject - function - debug
function:
var dt = new Date();
msg.payload = dt;
return msg;

3. inject - function - debug
function:
var dt = new Date(msg.payload);
var msg = {
    'month': dt.getMonth() + 1,
    'day': dt.getDate(),
    'year': dt.getFullYear(),
    'hours': dt.getHours(),
    'mins': dt.getMinutes(),
    'msecs': dt.getMilliseconds()
}
msg.payload = msg;
return msg;

4. inject - function - csv - write file
function:
var dt = new Date(msg.payload);
var value = {
    'month': dt.getMonth() + 1,
    'day': dt.getDate(),
    'year': dt.getFullYear(),
    'hours': dt.getHours(),
    'mins': dt.getMinutes(),
    'msecs': dt.getMilliseconds()
}
return {payload:value}

csv:
row name: month,day,year,hours,mins,msecs
comma

write file:
c:\workspace\test.csv

5. inject - function - debug
function:
// context - the nodeâ€™s local context
// flow - the flow scope context
// global - the global scope context

// initialise the counter to 0 if it doesn't exist already
var count = context.get('count') || 0;
count += 1;

// store the value back
context.set('count', count);

// make it part of the outgoing msg object
msg.payload = count;

return msg;

6. inject - function - debug
function:
node.log("Something happened");
node.warn("Something happened you should know about");
node.error("Oh no, something bad happened");

return msg;
  


